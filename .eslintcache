[{"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\index.js":"1","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\App.js":"2","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\serviceWorker.js":"3","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\PrivateRoute.js":"4","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Auth.js":"5","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Dashboard.js":"6","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\About.js":"7","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Home.js":"8","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Live.js":"9","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\NewsDetails.js":"10","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Login.js":"11","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\base.js":"12","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Comments.js":"13"},{"size":608,"mtime":1610301084583,"results":"14","hashOfConfig":"15"},{"size":2903,"mtime":1610301084577,"results":"16","hashOfConfig":"15"},{"size":5328,"mtime":1610301084584,"results":"17","hashOfConfig":"15"},{"size":524,"mtime":1610301084582,"results":"18","hashOfConfig":"15"},{"size":637,"mtime":1610301084578,"results":"19","hashOfConfig":"15"},{"size":10614,"mtime":1610301084579,"results":"20","hashOfConfig":"15"},{"size":660,"mtime":1610301084576,"results":"21","hashOfConfig":"15"},{"size":1922,"mtime":1610301084580,"results":"22","hashOfConfig":"15"},{"size":187,"mtime":1610301084580,"results":"23","hashOfConfig":"15"},{"size":1652,"mtime":1610301084581,"results":"24","hashOfConfig":"15"},{"size":1523,"mtime":1610362922600,"results":"25","hashOfConfig":"15"},{"size":476,"mtime":1610301084582,"results":"26","hashOfConfig":"15"},{"size":1768,"mtime":1610301084578,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1px6g3d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\index.js",[],["61","62"],"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\App.js",["63","64","65","66"],"import React, { useCallback, useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Login from \"./Login\";\r\n\r\nimport About from \"./About\";\r\nimport Live from \"./Live\";\r\n\r\nimport NewsDetails from \"./NewsDetails\";\r\nimport { AuthProvider } from \"./Auth\";\r\nimport PrivateRoute from \"./PrivateRoute.js\";\r\nimport {\r\n  MDBFooter ,MDBContainer ,MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\r\n  MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\r\n  } from \"mdbreact\";\r\n  \r\nimport { AuthContext } from \"./Auth.js\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  static contextType = AuthContext\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n  /*\r\n    <MDBNavItem>\r\n              <MDBNavLink to=\"/live\">Relacja na żywo</MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n            */\r\n  render() {\r\n    return(<AuthProvider>\r\n      <Router>\r\n        <div >\r\n        <MDBNavbar color=\"unique-color-dark\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">NewsPage</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem >\r\n              <MDBNavLink to=\"/\">Strona główna</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/about\">O stronie</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <span className=\"mr-2\">Więcej</span>\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu>\r\n                <MDBDropdownItem href=\"/login\">Panel admina</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/live\" component={Live} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/news/:id\" component={NewsDetails} />\r\n          <MDBFooter color=\"blue\" className=\"footer mt-4 fixed-bottom bottomFooter footer-copyright text-center py-3 font-small pt-4 mt-4\">\r\n      <div className=\"\">\r\n          &copy; {new Date().getFullYear()} Damian Szymański\r\n      </div>\r\n    </MDBFooter>\r\n        </div>\r\n      </Router>\r\n    </AuthProvider>\r\n    )\r\n};\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\serviceWorker.js",[],"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\PrivateRoute.js",[],"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Auth.js",[],"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Dashboard.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"import React from \"react\";\r\nimport app from \"./base\";\r\nimport axios from 'axios';\r\nimport {MDBIcon,MDBListGroup,MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter ,MDBListGroupItem, MDBBtn,MDBInput, MDBRow,MDBCard,MDBContainer, MDBCardBody, MDBCardImage,MDBCardHeader, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\nclass  Dashboard extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {title: '',titleEdit:'',descriptionEdit:'',contentEdit:'',currentId:'',description:'',content:\"\",news:[],modal: false};\r\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\r\n    this.handleChangeDesc = this.handleChangeDesc.bind(this);\r\n    this.handleChangeContent = this.handleChangeContent.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    \r\n    this.handleChangeTitleEdit = this.handleChangeTitleEdit.bind(this);\r\n    this.handleChangeDescEdit = this.handleChangeDescEdit.bind(this);\r\n    this.handleChangeContentEdit = this.handleChangeContentEdit.bind(this);\r\n    this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n   this.getData()\r\n  }\r\n  toggle(event) {\r\n    console.log(event)\r\n    if(event!=null){\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n        titleEdit:event.title,\r\n          contentEdit:event.content,\r\n          descriptionEdit:event.description,\r\n          currentId:event._id\r\n      });\r\n    }\r\n    else{\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n        titleEdit:\"\",\r\n          contentEdit:\"\",\r\n          descriptionEdit:\"\"\r\n      });\r\n    }\r\n    \r\n  }\r\n  handleSubmitEdit(event) {\r\n    const user = app.auth().currentUser;\r\n    const token = user && (user.getIdToken().then(x=>{\r\n      const payload = {\r\n        title:this.state.titleEdit,\r\n        content:this.state.contentEdit,\r\n        description:this.state.descriptionEdit,\r\n        id:this.state.currentId\r\n      }\r\n      const payloadHeader = {\r\n        headers: {\r\n          method:'POST',\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${x}`\r\n        },\r\n      };\r\n      try {\r\n        const res =  axios.patch(process.env.REACT_APP_APIURL,payload, payloadHeader).then(x=>{\r\nif(x.status==200||x.status==204){\r\n  toast.success('Pomyślnie edytowano nowego newsa', {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n  this.getData()\r\n  this.toggle(null)\r\n  return x.data;\r\n}\r\nelse{\r\n  toast.error('Błąd edycji newsa', {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n}\r\n});\r\n    } catch (e) {\r\n        console.error(e);\r\n        toast.error('Błąd edycji newsa', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n      }\r\n    }));\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const user = app.auth().currentUser;\r\n    const token = user && (user.getIdToken().then(x=>{\r\n      const payload = {\r\n        title:this.state.title,\r\n        content:this.state.content,\r\n        description:this.state.description\r\n      }\r\n      const payloadHeader = {\r\n        headers: {\r\n          method:'POST',\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${x}`\r\n        },\r\n      };\r\n      try {\r\n        const res =  axios.post(process.env.REACT_APP_APIURL,payload, payloadHeader).then(x=>{\r\nif(x.status==200||x.status==204){\r\n  toast.success('Pomyślnie dodano nowego newsa', {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n  this.getData()\r\n  return x.data;\r\n}\r\nelse{\r\n  toast.error('Błąd dodawania newsa', {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n}\r\n});\r\n    } catch (e) {\r\n        console.error(e);\r\n        toast.error('Błąd dodawania newsa', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n      }\r\n    }));\r\n    event.preventDefault();\r\n  }\r\n\r\n  getData(){\r\n    fetch(process.env.REACT_APP_APIURL)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          news: result\r\n        });\r\n      },\r\n      (error) => {\r\n        toast.error(' Błąd pobierania danych', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n        this.setState({\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n  handleChangeTitle(event) {\r\n    this.setState({title: event.target.value});\r\n  }\r\n  \r\n  handleChangeDesc(event) {\r\n    this.setState({description: event.target.value});\r\n  }\r\n  handleChangeContent(event) {\r\n    this.setState({content: event.target.value});\r\n  }\r\n  \r\n  handleChangeTitleEdit(event) {\r\n    this.setState({titleEdit: event.target.value});\r\n  }\r\n  \r\n  handleChangeDescEdit(event) {\r\n    this.setState({descriptionEdit: event.target.value});\r\n  }\r\n  handleChangeContentEdit(event) {\r\n    this.setState({contentEdit: event.target.value});\r\n  }\r\n  delete(event){\r\n    const user = app.auth().currentUser;\r\n    const token = user && (user.getIdToken().then(x=>{\r\n      const payload = {\r\n        title:this.state.title,\r\n        content:this.state.content,\r\n        description:this.state.description\r\n      }\r\n      const payloadHeader = {\r\n        headers: {\r\n          method:'DELETE',\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${x}`\r\n        },\r\n      };\r\n      try {\r\n        const res =  axios.delete(process.env.REACT_APP_APIURL+\"/\"+event._id,payload, payloadHeader).then(x=>{\r\nif(x.status==200||x.status==204){\r\n  toast.success('Pomyślnie usunięto newsa', {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n  this.getData()\r\n  return x.data;\r\n}\r\nelse{\r\n  toast.error('Błąd usuwania newsa', {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n}\r\n});\r\n    } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }));\r\n  }\r\n  render() {\r\n    const { error, isLoaded, news } = this.state;\r\n  return (\r\n    <MDBContainer>\r\n      <ToastContainer\r\nposition=\"top-right\"\r\nautoClose={5000}\r\nhideProgressBar={false}\r\nnewestOnTop={false}\r\ncloseOnClick\r\nrtl={false}\r\npauseOnFocusLoss\r\ndraggable\r\npauseOnHover\r\n/>\r\n<ToastContainer />\r\n    <MDBRow>\r\n    <MDBCol className=\"mt-2\" md='12'>\r\n      <MDBCard>\r\n          <MDBCardHeader><h4 className=\"text-center\">Dashboard</h4></MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBRow>\r\n            <MDBCol md=\"12\">\r\n            <form onSubmit={this.handleSubmit}>\r\n        <p className=\"h5 text-center mb-4\">Dodaj newsa</p>\r\n        <div className=\"grey-text\">\r\n          <MDBInput label=\"Tytuł\" value={this.state.title} onChange={this.handleChangeTitle} icon=\"align-justify\" group type=\"text\" required validate error=\"wrong\"\r\n            success=\"right\" />\r\n          <MDBInput value={this.state.description} onChange={this.handleChangeDesc} type=\"textarea\" rows=\"2\" label=\"Opis\" icon=\"pencil-alt\" />\r\n          <MDBInput value={this.state.content} onChange={this.handleChangeContent} type=\"textarea\" rows=\"6\" label=\"Treść\" icon=\"pencil-alt\" />\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <MDBBtn onClick={this.handleSubmit} type=\"submit\"  color=\"primary\">\r\n            Zapisz\r\n            <MDBIcon far icon=\"save\" className=\"ml-1\" />\r\n          </MDBBtn>\r\n        </div>\r\n      </form>\r\n         \r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow>\r\n    <MDBCol md=\"12\">\r\n      <h4 className=\"text-center mt-2\">Lista newsów</h4>\r\n    <MDBListGroup >\r\n    {news.map(item => (\r\n    <MDBListGroupItem key={item._id}>{item.title}\r\n    <MDBIcon style={{color:'red',cursor: 'pointer'}} onClick={()=>this.delete(item)} far icon=\"trash-alt\" className=\"ml-1\" />\r\n    <MDBIcon style={{color:'blue',cursor: 'pointer'}} onClick={()=>this.toggle(item)} far icon=\"edit\" className=\"ml-1\" />\r\n    </MDBListGroupItem>\r\n    ))}\r\n  </MDBListGroup>\r\n    </MDBCol>\r\n    </MDBRow>\r\n          <div className=\"text-center\">\r\n        <MDBBtn onClick={() => app.auth().signOut()} color=\"blue-grey\" >Wyloguj</MDBBtn>\r\n          </div>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n    </MDBRow>\r\n    <MDBModal isOpen={this.state.modal} toggle={()=>this.toggle(null)}>\r\n        <MDBModalHeader toggle={()=>this.toggle(null)}>Edycja newsa</MDBModalHeader>\r\n        <MDBModalBody>\r\n        <MDBRow>\r\n            <MDBCol md=\"12\">\r\n            <form onSubmit={this.handleSubmit}>\r\n        <div className=\"grey-text\">\r\n          <MDBInput label=\"Tytuł\" value={this.state.titleEdit} onChange={this.handleChangeTitleEdit} icon=\"align-justify\" group type=\"text\" required validate error=\"wrong\"\r\n            success=\"right\" />\r\n          <MDBInput value={this.state.descriptionEdit} onChange={this.handleChangeDescEdit} type=\"textarea\" rows=\"2\" label=\"Opis\" icon=\"pencil-alt\" />\r\n          <MDBInput value={this.state.contentEdit} onChange={this.handleChangeContentEdit} type=\"textarea\" rows=\"6\" label=\"Treść\" icon=\"pencil-alt\" />\r\n        </div>\r\n      </form>\r\n         \r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"light\" onClick={()=>this.toggle(null)}>Anuluj</MDBBtn>\r\n          <MDBBtn onClick={this.handleSubmitEdit} color=\"dark\">Zapisz zmiany</MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n \r\n\r\n  );\r\n}\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\About.js",["84","85","86","87"],"import React from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\r\n\r\nconst About = () => {\r\n\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <MDBRow>\r\n      <MDBCol className=\"mt-2\" md=\"12\">\r\n     <p>App is create by University of Gdańsk student, Damian Szymański. Goal of this project is improving his knowlegde about React</p>\r\n     <p>Technologies used in project:\r\n<ul>\r\n  <li>React</li>\r\n  <li>Firebase for authentication</li>\r\n  <li>MongoDB</li>\r\n</ul>\r\n     </p>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default withRouter(About);","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Home.js",["88","89"],"import React from \"react\";\r\nimport faker from \"faker\";\r\nimport app from \"./base\";\r\nimport { MDBBtn, MDBRow,MDBCard,MDBContainer, MDBCardBody, MDBCardImage,MDBCardHeader, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      news: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const newsUrl=process.env.REACT_APP_APIURL;\r\n\r\n    fetch(newsUrl)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            news: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n  render() {\r\n    const { error, isLoaded, news } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>\r\n    } else {\r\n  return (\r\n    <MDBContainer>\r\n      <h3 className=\"text-center mt-2\">Najświeższe newsy ze świata</h3>\r\n    <MDBRow >\r\n        {news.map(item => (\r\n    <MDBCol key={item._id} md='4' style={{marginTop: \"10px\",marginBottom:\"50px!important\"}}>\r\n      \r\n      <MDBCard className=\"h-100\">\r\n      <MDBCardImage className=\"img-fluid\" src={faker.image.image()} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle className=\"text-center\">{item.title}</MDBCardTitle>\r\n          <MDBCardText>\r\n          {item.description}\r\n          </MDBCardText>\r\n          <div className=\"text-center\">\r\n          <MDBBtn color=\"blue-grey\" href={\"/news/\"+item._id}>Więcej</MDBBtn>\r\n          </div>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n      ))}\r\n\r\n    </MDBRow>\r\n    </MDBContainer>\r\n  );}\r\n}\r\n};\r\n\r\nexport default Home;","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Live.js",[],"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\NewsDetails.js",["90","91","92"],"import React from \"react\";\r\nimport app from \"./base\";\r\nimport Comments from \"./Comments\"\r\nimport { MDBBtn, MDBRow,MDBCard,MDBContainer, MDBCardBody, MDBCardImage,MDBCardHeader, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nclass NewsDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      news: null,\r\n      comments: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const newsUrl=process.env.REACT_APP_APIURL;\r\nvar id=this.props.match.params.id;\r\n    fetch(newsUrl+\"/\"+id)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            news: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n  render() {\r\n    const { error, isLoaded, news } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>\r\n    } else {\r\n  return (\r\n    <MDBContainer>\r\n    <MDBRow>\r\n    <MDBCol className=\"mt-2\" md='12'>\r\n      <MDBCard>\r\n          <MDBCardHeader><h4 className=\"text-center\">{news.title}</h4></MDBCardHeader>\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{news.description}</MDBCardTitle>\r\n          <MDBCardText>{news.content}</MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n    </MDBRow>\r\n    <Comments/>\r\n    </MDBContainer>\r\n  );}\r\n}\r\n};\r\n\r\nexport default NewsDetails;","C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Login.js",["93"],"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\base.js",[],"C:\\Users\\Damian\\Desktop\\test\\api\\NewsPageReact\\src\\Comments.js",["94","95","96","97","98","99","100","101","102","103"],"import React from \"react\";\r\nimport app from \"./base\";\r\nimport { MDBBtn, MDBRow,MDBCard,MDBContainer, MDBCardBody, MDBCardImage,MDBCardHeader, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      news: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const newsUrl=process.env.REACT_APP_APIURL;\r\n\r\n    fetch(newsUrl+\"/comments\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          comments: result\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n  render() {\r\n    const { error, isLoaded, comments } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>\r\n    } else {\r\n      return(\r\n        <MDBContainer className=\"p-5 border border-light\">\r\n            <h5 className=\"text-center\">Komentarze</h5>\r\n                {comments.map(item => (\r\n            <div class=\"media d-block d-md-flex mt-4 mb-2\">\r\n            <img class=\"card-img-64 d-flex mx-auto mb-3\"\r\n                  src={item.image} alt=\"Avatar\"/>\r\n                     <div class=\"media-body text-center text-md-left ml-md-3 ml-0\">\r\n                  <p class=\"font-weight-bold my-0\">\r\n                    {item.name}\r\n                  </p>\r\n                  {item.text}\r\n            </div>\r\n            </div>\r\n                  ))}\r\n        </MDBContainer>\r\n      )\r\n}}\r\n};\r\n\r\nexport default Comments;\r\n\r\n\r\n\r\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":28},{"ruleId":"108","severity":1,"message":"112","line":1,"column":30,"nodeType":"110","messageId":"111","endLine":1,"endColumn":40},{"ruleId":"108","severity":1,"message":"113","line":15,"column":14,"nodeType":"110","messageId":"111","endLine":15,"endColumn":26},{"ruleId":"108","severity":1,"message":"114","line":15,"column":124,"nodeType":"110","messageId":"111","endLine":15,"endColumn":137},{"ruleId":"108","severity":1,"message":"115","line":4,"column":163,"nodeType":"110","messageId":"111","endLine":4,"endColumn":175},{"ruleId":"108","severity":1,"message":"116","line":4,"column":191,"nodeType":"110","messageId":"111","endLine":4,"endColumn":203},{"ruleId":"108","severity":1,"message":"117","line":4,"column":205,"nodeType":"110","messageId":"111","endLine":4,"endColumn":216},{"ruleId":"108","severity":1,"message":"118","line":48,"column":11,"nodeType":"110","messageId":"111","endLine":48,"endColumn":16},{"ruleId":"108","severity":1,"message":"119","line":63,"column":15,"nodeType":"110","messageId":"111","endLine":63,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":64,"column":12,"nodeType":"122","messageId":"123","endLine":64,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":64,"column":27,"nodeType":"122","messageId":"123","endLine":64,"endColumn":29},{"ruleId":"108","severity":1,"message":"118","line":108,"column":11,"nodeType":"110","messageId":"111","endLine":108,"endColumn":16},{"ruleId":"108","severity":1,"message":"119","line":122,"column":15,"nodeType":"110","messageId":"111","endLine":122,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":123,"column":12,"nodeType":"122","messageId":"123","endLine":123,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":123,"column":27,"nodeType":"122","messageId":"123","endLine":123,"endColumn":29},{"ruleId":"108","severity":1,"message":"118","line":212,"column":11,"nodeType":"110","messageId":"111","endLine":212,"endColumn":16},{"ruleId":"108","severity":1,"message":"119","line":226,"column":15,"nodeType":"110","messageId":"111","endLine":226,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":227,"column":12,"nodeType":"122","messageId":"123","endLine":227,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":227,"column":27,"nodeType":"122","messageId":"123","endLine":227,"endColumn":29},{"ruleId":"108","severity":1,"message":"124","line":258,"column":13,"nodeType":"110","messageId":"111","endLine":258,"endColumn":18},{"ruleId":"108","severity":1,"message":"125","line":258,"column":20,"nodeType":"110","messageId":"111","endLine":258,"endColumn":28},{"ruleId":"108","severity":1,"message":"126","line":2,"column":22,"nodeType":"110","messageId":"111","endLine":2,"endColumn":30},{"ruleId":"108","severity":1,"message":"127","line":3,"column":40,"nodeType":"110","messageId":"111","endLine":3,"endColumn":46},{"ruleId":"108","severity":1,"message":"128","line":3,"column":48,"nodeType":"110","messageId":"111","endLine":3,"endColumn":55},{"ruleId":"108","severity":1,"message":"129","line":3,"column":57,"nodeType":"110","messageId":"111","endLine":3,"endColumn":65},{"ruleId":"108","severity":1,"message":"130","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":11},{"ruleId":"108","severity":1,"message":"131","line":4,"column":73,"nodeType":"110","messageId":"111","endLine":4,"endColumn":86},{"ruleId":"108","severity":1,"message":"130","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":11},{"ruleId":"108","severity":1,"message":"127","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":16},{"ruleId":"108","severity":1,"message":"115","line":4,"column":60,"nodeType":"110","messageId":"111","endLine":4,"endColumn":72},{"ruleId":"108","severity":1,"message":"128","line":6,"column":48,"nodeType":"110","messageId":"111","endLine":6,"endColumn":55},{"ruleId":"108","severity":1,"message":"130","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":11},{"ruleId":"108","severity":1,"message":"127","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"132","line":3,"column":18,"nodeType":"110","messageId":"111","endLine":3,"endColumn":24},{"ruleId":"108","severity":1,"message":"133","line":3,"column":25,"nodeType":"110","messageId":"111","endLine":3,"endColumn":32},{"ruleId":"108","severity":1,"message":"134","line":3,"column":47,"nodeType":"110","messageId":"111","endLine":3,"endColumn":58},{"ruleId":"108","severity":1,"message":"115","line":3,"column":60,"nodeType":"110","messageId":"111","endLine":3,"endColumn":72},{"ruleId":"108","severity":1,"message":"131","line":3,"column":73,"nodeType":"110","messageId":"111","endLine":3,"endColumn":86},{"ruleId":"108","severity":1,"message":"116","line":3,"column":88,"nodeType":"110","messageId":"111","endLine":3,"endColumn":100},{"ruleId":"108","severity":1,"message":"117","line":3,"column":102,"nodeType":"110","messageId":"111","endLine":3,"endColumn":113},{"ruleId":"108","severity":1,"message":"135","line":3,"column":115,"nodeType":"110","messageId":"111","endLine":3,"endColumn":121},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'MDBContainer' is defined but never used.","'MDBFormInline' is defined but never used.","'MDBCardImage' is defined but never used.","'MDBCardTitle' is defined but never used.","'MDBCardText' is defined but never used.","'token' is assigned a value but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'Redirect' is defined but never used.","'MDBBtn' is defined but never used.","'MDBIcon' is defined but never used.","'MDBInput' is defined but never used.","'app' is defined but never used.","'MDBCardHeader' is defined but never used.","'MDBRow' is defined but never used.","'MDBCard' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBCol' is defined but never used.","no-global-assign","no-unsafe-negation"]